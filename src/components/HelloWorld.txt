<template>
  <div ref="container" class="container">
      <!-- Panel -->
      <div ref="panel" id="panel"></div>
    <!-- Botón -->
    <div ref="button"></div>
  </div>
</template>

<script setup>
import { ref, onMounted } from "vue";
import * as THREE from "three";
import * as BUI from "@thatopen/ui";
import * as OBC from "@thatopen/components";
import Stats from "stats.js";

// Utilizamos ref para crear una referencia al contenedor
const container = ref(null);
const panelRef = ref(null);
const buttonRef = ref(null);
const components = new OBC.Components();
const worlds = components.get(OBC.Worlds);

const world = worlds.create(
  OBC.SimpleScene,
  OBC.SimpleCamera,
  OBC.SimpleRenderer
);

// Montamos el componente una vez que el DOM esté listo
onMounted(() => {
  world.scene = new OBC.SimpleScene(components);
  world.renderer = new OBC.SimpleRenderer(components, container.value); // Accedemos al valor del ref
  world.camera = new OBC.SimpleCamera(components);

  components.init();
  world.scene.three.background = null;

  const material = new THREE.MeshLambertMaterial({ color: "#6528D7" });
  const geometry = new THREE.BoxGeometry();
  const cube = new THREE.Mesh(geometry, material);
  world.scene.three.add(cube);

  world.scene.setup();

  world.camera.controls.setLookAt(3, 3, 3, 0, 0, 0);

  const stats = new Stats();
  stats.showPanel(2);
  document.body.append(stats.dom);
  stats.dom.style.left = "0px";
  stats.dom.style.zIndex = "unset";
  world.renderer.onBeforeUpdate.add(() => stats.begin());
  world.renderer.onAfterUpdate.add(() => stats.end());

  BUI.Manager.init();

});

</script>

<style scoped>
.container{
  width: 100%;
  height: 1000px;
}
</style>
